class Node(object):
    def __init__(self, initdata):
        self.data = initdata
        self.next = None
    def getData(self):
        return  self.data
    def getNext(self):
        return self.next
    def setData(self,newdata):
        self.data = newdata
    def setNext(self, newnext):
        self.next = newnext

class UnorderedList(object):
    def __init__(self):
        self.head = None
    def isEmpty(self):
        return self.head == None
    def add(self,item):
        temp = Node(item)
        temp.setNext(self.head)
        self.head = temp
    def size(self):
        current = self.head
        count = 0
        while current != None:
            count = count + 1
            current = current.getNext()

        return count
    def search(self, item):
        current = self.head
        found = False
        while current != None and not found:
            if current.getData() == item:
                found = True
            else:
                current = current.getNext()
        return found
    def remove(self, item):
        current = self.head
        previous = None
        found = False
        while not found:
            if current.getData() == item:
                found = True
            else:
                previous = current
                current = current.getNext()
        if previous == None:
            self.head = current.getNext()
        else:
            previous.setNext(current.getNext())
mylist = UnorderedList()
mylist.add(31)
mylist.add(77)
mylist.add(17)
mylist.add(93)
mylist.add(26)
mylist.add(54)
print("size of mylist is ", mylist.size()) #6
print("search result  mylist is ", mylist.search(17)) #True
print("search result  mylist is ", mylist.search(100)) #false
mylist.remove(17)
print("remove 17  in mylist and size is %d" % mylist.size()) #5
mylist.remove(54)
print("remove 54  in mylist and size is %d" % mylist.size()) #5
